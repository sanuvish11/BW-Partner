{"version":3,"sources":["webpack:///src/app/form-two/form-two-routing.module.ts","webpack:///src/app/form-two/form-two.module.ts","webpack:///src/app/form-two/form-two.page.ts","webpack:///src/app/form-two/form-two.page.scss","webpack:///src/app/form-two/form-two.page.html"],"names":["routes","path","component","FormTwoPage","FormTwoPageRoutingModule","NgModule","imports","RouterModule","exports","FormTwoPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","router","formService","languageService","apiService","submitted","pincodeCheck","pincodeCheckONSubmit","moNumber","postalAreas","autoCity","showAreasValues","autoState","usersData","BwUsers","form","FormGroup","FormControl","adharNumber","firstName","middleName","lastName","date_of_birth","fatherName","address1","Validators","address2","address3","area","city","state","pincode","_translateLanguage","localStorage","getItem","_id","console","log","getUserById","getBwUsersById","subscribe","res","data","err","controls","get","getAllData","formData","forEach","id","updateFormData","value","navigate","getValuesFromPincode","length","divisionname","circlename","push","officename","invalid","updateUserData","Router","FormsService","LanguageService","ApiService","Component","selector","template"],"mappings":"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","file":"src_app_form-two_form-two_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormTwoPage } from './form-two.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormTwoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormTwoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormTwoPageRoutingModule } from './form-two-routing.module';\n\nimport { FormTwoPage } from './form-two.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    FormTwoPageRoutingModule\n  ],\n  declarations: [FormTwoPage]\n})\nexport class FormTwoPageModule {}\n","import { FormsService } from './../services/forms.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BwUsers } from '../Models/bwUsers';\nimport { LanguageService } from '../services/language.service';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-form-two',\n  templateUrl: './form-two.page.html',\n  styleUrls: ['./form-two.page.scss'],\n})\nexport class FormTwoPage implements OnInit {\n  submitted: boolean = false;\n  id: string;\n  pincodeCheck: boolean = false;\n  pincodeCheckONSubmit: boolean = false;\n  moNumber: string = '';\n  postalAreas: any[] = [];\n  autoCity: any = '';\n  showAreasValues: boolean = false;\n  autoState: any = '';\n  usersData: BwUsers = new BwUsers();\n  form = new FormGroup({\n    moNumber: new FormControl(''),\n    adharNumber: new FormControl(''),\n    firstName: new FormControl(''),\n    middleName: new FormControl(''),\n    lastName: new FormControl(''),\n    date_of_birth: new FormControl(''),\n    fatherName: new FormControl(''),\n\n    address1: new FormControl('', [Validators.required]),\n    address2: new FormControl('', [Validators.required]),\n    address3: new FormControl('', [Validators.required]),\n    area: new FormControl('', [Validators.required]),\n    city: new FormControl('', [Validators.required]),\n    // postal_area: new FormControl('', [Validators.required]),\n    state: new FormControl('', [Validators.required]),\n    pincode: new FormControl('', [Validators.required, Validators.pattern(\"^[0-9]*$\")])\n  })\n  constructor(private router: Router, private formService: FormsService, private languageService: LanguageService, private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.languageService._translateLanguage();\n  }\n\n  ionViewWillEnter(){\n    this.moNumber = localStorage.getItem('moNumber');\n    this.usersData._id = localStorage.getItem('userId');\n    console.log(this.usersData._id);\n    // this.getAllUsersData();\n    this.getUserById();\n  }\n\n  getUserById(){\n    console.log(this.usersData)\n    this.apiService.getBwUsersById(this.usersData._id).subscribe((res: any) => {\n      console.log(res.data)\n      this.usersData = res.data;\n      console.log(this.usersData)\n    },(err => console.log(err)))\n  }\n\n  f(controls) {\n    return this.form.get(controls);\n  }\n\n  getAllUsersData(){\n    this.formService.getAllData()\n    .subscribe((res: any) => {\n      res.formData.forEach((data: BwUsers) => {\n        console.log(data)\n        this.id =  data._id;\n        this.usersData = data;\n        console.log(this.usersData)\n      })\n      \n    },(err) => { console.log(err)});\n  }\n\n  updateUserData(){\n    this.usersData._id = localStorage.getItem('userId');\n    this.formService.updateFormData(localStorage.getItem('userId'), this.form.value)\n    .subscribe((data: any) => {\n      if(data){\n        this.router.navigate(['/form-three'])\n      }\n    },(err => { console.log(err) }));\n  }\n\n  \n\n  callApiForPinCode(){\n    this.apiService.getValuesFromPincode(this.form.get('pincode').value)\n    .subscribe((res: any) => {\n      if(res.length != 0){\n        this.pincodeCheck = false;\n        res.forEach((data: any) => {\n          this.autoCity = data.divisionname;\n          this.autoState = data.circlename;\n          this.postalAreas.push(data.officename)\n        })\n      }\n      else{\n          this.pincodeCheck = true;\n          this.postalAreas = [];\n          this.autoState = '';\n          this.autoCity = '';\n          // this.usersData = new BwUsers();\n      }\n    },(err => {console.log(err)}));\n  }\n\n  getAreas(){\n    console.log('working')\n    this.showAreasValues = true;\n    console.log(this.form.value.area)\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    this.form.value.moNumber = this.moNumber;\n    \n    this.form.value.adharNumber = this.usersData.adharNumber,\n    this.form.value.firstName =this.usersData.firstName,\n    this.form.value.middleName =this.usersData.middleName,\n    this.form.value.lastName =this.usersData.lastName,\n    this.form.value.date_of_birth =this.usersData.date_of_birth,\n    this.form.value.fatherName = this.usersData.fatherName\n  \n      if(this.form.invalid){\n        return;\n      } \n      else if(this.pincodeCheck == true){\n        return\n      }\n\n      console.log(this.form.value)\n\n     this.updateUserData();\n    \n   \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtLXR3by5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"tool\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{languageService.perInform_for_lang}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <div class=\\\"px-10\\\">\\n  <form [formGroup]=\\\"form\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n    <ion-grid class=\\\"form-style\\\">\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">{{languageService.pincode_for_lang}} </ion-label>\\n              <ion-input\\n                name=\\\"pinCode\\\"\\n                required\\n                 (ionChange)=\\\"callApiForPinCode()\\\"\\n                [ngModel]=\\\"usersData.pincode\\\"\\n                formControlName=\\\"pincode\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item class=\\\"validation\\\" *ngIf=\\\"submitted && f('pincode').hasError('required')\\\"\\n                lines=\\\"none\\\">\\n                <ion-label *ngIf=\\\"f('pincode').hasError('required')\\\"  class=\\\"validation\\\">\\n                  {{languageService.cant_empty_for_lang}}\\n                </ion-label>\\n              </ion-item>\\n    \\n              <ion-item class=\\\"validation\\\" *ngIf=\\\"f('pincode').hasError('pattern')\\\" \\n              lines=\\\"none\\\">\\n              <ion-label >\\n                Input must be a number!\\n              </ion-label>\\n            </ion-item>\\n            <div  style=\\\"margin-bottom: 16px; margin-left: 15px;\\\"  *ngIf=\\\"form.get('pincode').touched && pincodeCheck\\\" [style.color]=\\\"'red'\\\">\\n              <span>पिनकोड सही नहीं है</span>\\n            </div>\\n    \\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">{{languageService.city_for_lang}}</ion-label>\\n              <ion-input\\n                name=\\\"city\\\"\\n                required\\n                [ngModel]=\\\"autoCity\\\"\\n                disabled=\\\"true\\\"\\n                formControlName=\\\"city\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"submitted && f('city').hasError('required')\\\"\\n                lines=\\\"none\\\" class=\\\"validation\\\">\\n                <ion-label *ngIf=\\\"f('city').hasError('required')\\\"  >\\n                  {{languageService.cant_empty_for_lang}}\\n                </ion-label>\\n              </ion-item>\\n    \\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">{{languageService.state_for_lang}} </ion-label>\\n              <ion-input\\n                name=\\\"State\\\"\\n                required\\n                disabled=\\\"true\\\"\\n                [ngModel]=\\\"autoState\\\"\\n                formControlName=\\\"state\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item class=\\\"validation\\\" *ngIf=\\\"submitted && f('state').hasError('required')\\\"\\n                lines=\\\"none\\\">\\n                <ion-label *ngIf=\\\"f('state').hasError('required')\\\"  class=\\\"validation\\\">\\n                  {{languageService.cant_empty_for_lang}}\\n                </ion-label>\\n              </ion-item>\\n\\n              <ion-item *ngIf=\\\"usersData.area == null\\\" lines=\\\"none\\\" class=\\\"ion-margin-bottom custome-select\\\">\\n                <ion-label class=\\\"ion-margin-bottom\\\" position=\\\"stacked\\\">डाक क्षेत्र </ion-label>\\n                <select (change)=\\\"getAreas()\\\"  formControlName=\\\"area\\\"  name=\\\"skill\\\" class=\\\"required\\\">\\n                  <option    value=\\\"\\\" disabled selected>Select Area</option>\\n                  <option  *ngFor=\\\"let areas of postalAreas\\\"  [ngValue]=\\\"areas\\\">{{areas}}</option>\\n                </select>\\n              </ion-item>\\n\\n              <ion-item *ngIf=\\\"usersData.area != null\\\" lines=\\\"none\\\" class=\\\"ion-margin-bottom custome-select\\\">\\n                <ion-label class=\\\"ion-margin-bottom\\\" position=\\\"stacked\\\">डाक क्षेत्र </ion-label>\\n                <select (change)=\\\"getAreas()\\\" [ngModel]=\\\"usersData.area\\\"  formControlName=\\\"area\\\"  name=\\\"skill\\\" class=\\\"required\\\">\\n                  <option  *ngFor=\\\"let areas of postalAreas\\\"  [ngValue]=\\\"areas\\\">{{areas}}</option>\\n                </select>\\n              </ion-item>\\n\\n              <ion-item *ngIf=\\\"submitted && f('area').hasError('required')\\\"\\n          lines=\\\"none\\\" class=\\\"validation\\\">\\n          <ion-label *ngIf=\\\"f('area').hasError('required')\\\"  class=\\\"validation\\\">\\n            {{languageService.cant_empty_for_lang}}\\n          </ion-label>\\n        </ion-item>\\n    \\n           \\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">{{languageService.address1_for_lang}}</ion-label>\\n              <ion-input [ngModel]=\\\"usersData.address1\\\" formControlName=\\\"address1\\\"></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"submitted && f('address1').hasError('required')\\\"\\n            lines=\\\"none\\\" class=\\\"validation\\\">\\n            <ion-label *ngIf=\\\"f('address1').hasError('required')\\\"  class=\\\"validation\\\">\\n              {{languageService.cant_empty_for_lang}}\\n            </ion-label>\\n          </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">{{languageService.address2_for_lang}}</ion-label>\\n              <ion-input [ngModel]=\\\"usersData.address2\\\" formControlName=\\\"address2\\\"></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"submitted && f('address2').hasError('required')\\\"\\n            lines=\\\"none\\\" class=\\\"validation\\\">\\n            <ion-label *ngIf=\\\"f('address2').hasError('required')\\\"  class=\\\"validation\\\">\\n              {{languageService.cant_empty_for_lang}}\\n            </ion-label>\\n          </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">{{languageService.address3_for_lang}}</ion-label>\\n              <ion-input [ngModel]=\\\"usersData.address3\\\" formControlName=\\\"address3\\\"></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"submitted && f('address3').hasError('required')\\\"\\n            lines=\\\"none\\\" class=\\\"validation\\\">\\n            <ion-label *ngIf=\\\"f('address3').hasError('required')\\\"  class=\\\"validation\\\">\\n              {{languageService.cant_empty_for_lang}}\\n            </ion-label>\\n          </ion-item>\\n\\n            <!-- <ion-item>\\n              <ion-label position=\\\"floating\\\">{{languageService.area_for_lang}}</ion-label>\\n              <ion-input [ngModel]=\\\"usersData.area\\\" name=\\\"area\\\" required formControlName=\\\"area\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item class=\\\"validation\\\" *ngIf=\\\"submitted && f('area').hasError('required')\\\"\\n            lines=\\\"none\\\">\\n            <ion-label *ngIf=\\\"f('area').hasError('required')\\\">\\n              {{languageService.cant_empty_for_lang}}\\n            </ion-label>\\n          </ion-item> -->\\n\\n        \\n\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n         <ion-button class=\\\"ion-margin-vertical\\\" type=\\\"submit\\\" class=\\\"btn-primary\\\" expand=\\\"block\\\">Continue</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</div>\\n</ion-content>\\n\";"]}