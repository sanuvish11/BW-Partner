{"version":3,"sources":["webpack:///src/app/admin-create-user/admin-create-user-routing.module.ts","webpack:///src/app/admin-create-user/admin-create-user.module.ts","webpack:///src/app/admin-create-user/admin-create-user.page.ts","webpack:///src/app/admin-create-user/admin-create-user.page.scss","webpack:///src/app/admin-create-user/admin-create-user.page.html"],"names":["routes","path","component","AdminCreateUserPage","AdminCreateUserPageRoutingModule","NgModule","imports","RouterModule","exports","AdminCreateUserPageModule","CommonModule","ReactiveFormsModule","FormsModule","IonicModule","declarations","apiService","_Activatedroute","typeOfJob","mode","id","userData","SubUsers","form","FormGroup","userName","FormControl","moNumber","email","password","jobType","status","snapshot","paramMap","get","subscribe","has","getSubUserById","res","console","log","err","value","saveSubUsers","updateSubUsers","reset","radioValue","ApiService","ActivatedRoute","Component","selector","template"],"mappings":"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","file":"src_app_admin-create-user_admin-create-user_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminCreateUserPage } from './admin-create-user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminCreateUserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminCreateUserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminCreateUserPageRoutingModule } from './admin-create-user-routing.module';\n\nimport { AdminCreateUserPage } from './admin-create-user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    AdminCreateUserPageRoutingModule\n  ],\n  declarations: [AdminCreateUserPage]\n})\nexport class AdminCreateUserPageModule {}\n","import { SubUsers } from './../Models/subUsers';\nimport { ApiService } from './../services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-create-user',\n  templateUrl: './admin-create-user.page.html',\n  styleUrls: ['./admin-create-user.page.scss'],\n})\nexport class AdminCreateUserPage implements OnInit {\n  typeOfJob: any[] = [\"Manager\",\n \"Clerk\",\n \"Data Manager\",\n \"Doctor\",\n \"Software Developer\"\n ];\n private mode = \"create\";\n id: string = '';\n userData: SubUsers = new SubUsers();\n  form = new FormGroup({\n    userName: new FormControl(''),\n    moNumber: new FormControl(''),\n    email: new FormControl(''),\n    password: new FormControl(''),\n    jobType: new FormControl(''),\n    status: new FormControl('')\n  })\n\n  constructor(private apiService: ApiService, private _Activatedroute:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.id = this._Activatedroute.snapshot.paramMap.get(\"id\");\n\n   \n\n    this._Activatedroute.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"id\")) {\n        this.mode = \"edit\";\n        this.id = paramMap.get(\"id\");\n        this.apiService.getSubUserById(this.id).subscribe((res: SubUsers) => {\n          console.log(res);\n          this.userData = res;\n        },\n        (err) => {\n          console.log(err);\n        })\n      } else {\n        this.mode = \"create\";\n        this.id = null;\n      }\n    });\n  }\n\n  onSubmit(){\n    console.log(this.form.value);\n    if (this.mode === \"create\") {\n      this.apiService.saveSubUsers(this.form.value);\n    } else {\n      this.apiService.updateSubUsers(this.id, this.form.value);\n    }\n    this.form.reset();\n  }\n\n  getJobValue(){\n    console.log(this.form.value.jobType)\n  }\n\n\n  getRadioValue(radioValue){\n    console.log(radioValue);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi1jcmVhdGUtdXNlci5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"tool\\\">\\n    <ion-title style=\\\"color: white;\\\">Add Users</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list >\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Name</ion-label>\\n              <ion-input\\n                name=\\\"userName\\\"\\n                required\\n                [ngModel]=\\\"userData.userName\\\"\\n                formControlName=\\\"userName\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Mobile Number</ion-label>\\n              <ion-input\\n                name=\\\"moNumber\\\"\\n                required\\n                [ngModel]=\\\"userData.moNumber\\\"\\n                formControlName=\\\"moNumber\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">email</ion-label>\\n              <ion-input\\n                name=\\\"email\\\"\\n                required\\n                [ngModel]=\\\"userData.email\\\"\\n                formControlName=\\\"email\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">password</ion-label>\\n              <ion-input\\n                name=\\\"password\\\"\\n                required\\n                [ngModel]=\\\"userData.password\\\"\\n                formControlName=\\\"password\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-margin-bottom\\\">\\n              <ion-label class=\\\"ion-margin-bottom\\\" position=\\\"stacked\\\">Job Type</ion-label>\\n              <select [ngModel]=\\\"userData.jobType\\\" (change)=\\\"getJobValue()\\\" formControlName=\\\"jobType\\\"  name=\\\"jobType\\\" class=\\\"required\\\">\\n                <option value=\\\"\\\" disabled selected>Select Location</option>\\n                <option *ngFor=\\\"let job of typeOfJob\\\"  [ngValue]=\\\"job\\\">{{job}}</option>\\n              </select>\\n            </ion-item>\\n\\n            <ion-item lines=\\\"none\\\">\\n              <!-- <ion-label>Job Status</ion-label> -->\\n              <ion-list>\\n                <ion-radio-group [ngModel]=\\\"userData.status\\\" value=\\\"Active\\\" formControlName=\\\"status\\\" (ionChange)=\\\"getRadioValue($event)\\\">\\n                  <ion-list-header>\\n                    <ion-label>Job Status</ion-label>\\n                  </ion-list-header>\\n              \\n                  <ion-item>\\n                    <ion-label>Active</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"Active\\\"></ion-radio>\\n                  </ion-item>\\n              \\n                  <ion-item>\\n                    <ion-label>InActive</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"inActive\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n              </ion-list>\\n            </ion-item>\\n\\n      \\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n         <ion-button  \\n         class=\\\"ion-margin-vertical\\\"\\n         type=\\\"submit\\\"\\n         color=\\\"danger\\\"\\n         expand=\\\"block\\\">ADD USER</ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n         <ion-button  \\n         class=\\\"ion-margin-vertical\\\"\\n         color=\\\"danger\\\"\\n         expand=\\\"block\\\" routerLink=\\\"/admin-user-reports\\\">Check user list</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";"]}