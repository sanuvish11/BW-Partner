{"version":3,"sources":["webpack:///src/app/admin-create-user/admin-create-user-routing.module.ts","webpack:///src/app/admin-create-user/admin-create-user.module.ts","webpack:///src/app/admin-create-user/admin-create-user.page.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/admin-create-user/admin-create-user.page.scss","webpack:///src/app/admin-create-user/admin-create-user.page.html"],"names":["routes","path","component","AdminCreateUserPage","AdminCreateUserPageRoutingModule","NgModule","imports","RouterModule","exports","AdminCreateUserPageModule","CommonModule","ReactiveFormsModule","FormsModule","IonicModule","declarations","apiService","_Activatedroute","typeOfJob","mode","id","userData","SubUsers","form","FormGroup","userName","FormControl","moNumber","email","password","jobType","status","snapshot","paramMap","get","subscribe","has","getSubUserById","res","console","log","err","value","saveSubUsers","updateSubUsers","reset","radioValue","ApiService","ActivatedRoute","Component","selector","template","http","router","isAuthenticated","authStatusListener","Subject","otp","BehaviorSubject","senderid","apikey","_OTP","Math","floor","random","message","httpOptions","headers","HttpHeaders","baseUrl","authData","post","response","token","expiresInDuration","expiresIn","setAuthTimer","next","now","Date","expirationDate","getTime","saveAuthData","navigate","localStorage","setItem","toISOString","clearTimeout","tokenTimer","clearAuthData","removeItem","duration","setTimeout","logout","number","put","skills","coreSkills","expeData","userValue","mobileNo","verify_otp","photofile","pincode","HttpClient","Router","Injectable","providedIn"],"mappings":"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","file":"src_app_admin-create-user_admin-create-user_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminCreateUserPage } from './admin-create-user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminCreateUserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminCreateUserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminCreateUserPageRoutingModule } from './admin-create-user-routing.module';\n\nimport { AdminCreateUserPage } from './admin-create-user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    AdminCreateUserPageRoutingModule\n  ],\n  declarations: [AdminCreateUserPage]\n})\nexport class AdminCreateUserPageModule {}\n","import { SubUsers } from './../Models/subUsers';\nimport { ApiService } from './../services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-create-user',\n  templateUrl: './admin-create-user.page.html',\n  styleUrls: ['./admin-create-user.page.scss'],\n})\nexport class AdminCreateUserPage implements OnInit {\n  typeOfJob: any[] = [\"Manager\",\n \"Clerk\",\n \"Data Manager\",\n \"Doctor\",\n \"Software Developer\"\n ];\n private mode = \"create\";\n id: string = '';\n userData: SubUsers = new SubUsers();\n  form = new FormGroup({\n    userName: new FormControl(''),\n    moNumber: new FormControl(''),\n    email: new FormControl(''),\n    password: new FormControl(''),\n    jobType: new FormControl(''),\n    status: new FormControl('')\n  })\n\n  constructor(private apiService: ApiService, private _Activatedroute:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.id = this._Activatedroute.snapshot.paramMap.get(\"id\");\n\n   \n\n    this._Activatedroute.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"id\")) {\n        this.mode = \"edit\";\n        this.id = paramMap.get(\"id\");\n        this.apiService.getSubUserById(this.id).subscribe((res: SubUsers) => {\n          console.log(res);\n          this.userData = res;\n        },\n        (err) => {\n          console.log(err);\n        })\n      } else {\n        this.mode = \"create\";\n        this.id = null;\n      }\n    });\n  }\n\n  onSubmit(){\n    console.log(this.form.value);\n    if (this.mode === \"create\") {\n      this.apiService.saveSubUsers(this.form.value);\n    } else {\n      this.apiService.updateSubUsers(this.id, this.form.value);\n    }\n    this.form.reset();\n  }\n\n  getJobValue(){\n    console.log(this.form.value.jobType)\n  }\n\n\n  getRadioValue(radioValue){\n    console.log(radioValue);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { SubUsers } from './../Models/subUsers';\nimport { BwUsers } from '../Models/bwUsers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private authStatusListener = new Subject<boolean>();\n    otp = new BehaviorSubject<number>(0);\n  senderid = 'BHWORK';\n  apikey = '2FOIKXErhyfpHlYT';\n  _OTP = Math.floor(1000 + Math.random() * 9000);\n  message = \"Dear Partner, use OTP \" + this._OTP +  \"to verify your mobile number - Bharat Worker\"\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n  // baseUrl= 'http://localhost:3000/';\n  baseUrl= 'https://bw-partner-server.herokuapp.com/';\n  constructor(private http: HttpClient, private router: Router) { }\n\ncreateUser(email: string, password: string) {\n    const authData: any = { email: email, password: password };\n    this.http\n      .post(\"http://localhost:3000/api/user/signup\", authData,this.httpOptions)\n      .subscribe(response => {\n        console.log(response);\n      },\n      (err: any) => {\n        console.log(err);\n      });\n  }\n\n  login(email: string, password: string) {\n    const authData: any = { email: email, password: password };\n    this.http\n      .post<{ token: string; expiresIn: number }>(\n        \"http://localhost:3000/api/user/login\",\n        authData\n      )\n      .subscribe(response => {\n        console.log(response);\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          console.log(expirationDate);\n          this.saveAuthData(token, expirationDate);\n          this.router.navigate([\"/admin-home\"]);\n        }\n      }\n      ,(err: any) => {\n        console.log(err);\n      });\n  }\n\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/auth']);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n  }\n\n\n  private setAuthTimer(duration: number) {\n    console.log(\"Setting timer: \" + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  // http://text.radicaltechsupport.com/V2/http-api.php?senderidsenderid=XXXXXXXXXXXXXXXX&senderid=XXXXXX&number=XXXXXXXXXXX,XXXXXXXXXXX,XXXXXXXXXXX&message=hello there&format=json\n  getOtp(number){\n    let _OTP = Math.floor(1000 + Math.random() * 9000);\n    let message = \"Dear Partner, use OTP \" + _OTP +  \" to verify your mobile number - Bharat Worker\";\n      console.log(message)\n      this.otp.next(_OTP);\n      this.router.navigate(['/otp']);\n   \n    // const params = new HttpParams()\n    // .set('apikey', this.apikey)\n    // .set('senderid', this.senderid)\n    // .set('number', number)\n    // .set('message', message)\n    // .set('format', \"json\");\n    // console.log(params.toString());\n    // this.http.get(\"http://text.radicaltechsupport.com/V2/http-api.php\", {params}).subscribe((data: any) => {\n    //   console.log(data);\n    // },(err => {\n    //   console.log(err);\n    // }))\n  }\n\n  saveSubUsers(userData){\n    this.http.post(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + \"save\", userData).subscribe((res: any) => {\n      console.log(res);\n      if(res){\n        this.router.navigate(['/admin-user-reports'])\n      }\n    },\n    (err => {\n      console.log(err);\n    }))\n  }\n\n  getAllSubUsers(){\n   return this.http.get(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + \"get\" + \"/\" + \"all\",this.httpOptions);\n  }\n\n  getSubUserById(id){\n    return this.http.get(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + id,this.httpOptions);\n  }\n\n  updateSubUsers(id, userData: SubUsers){\n    this.http.put(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + \"update\" + \"/\" + id, userData,this.httpOptions)\n      .subscribe((res: SubUsers) => {\n        console.log(res);\n        if(res){\n          this.router.navigate(['/admin-user-reports'])\n        }\n      },\n      (err => console.log(err)))\n  }\n  \n  saveSkills(skills){\n    return this.http.post(this.baseUrl + \"api/\" + \"jobs/\" +  \"save/\" + \"skill\", skills,this.httpOptions);\n  }\n\n  saveCoreSkills(coreSkills){\n    return this.http.post(this.baseUrl + \"api/\" + \"jobsWorkArea/\" +  \"save/\" + \"coreSkills\", coreSkills,this.httpOptions);\n  }\n\n  saveExpe(expeData){\n    return this.http.post(this.baseUrl + \"api/\" + \"skills/\" +  \"save/\" + \"expe\", expeData,this.httpOptions);\n  }\n\n  subUserLogin(userValue){\n    return this.http.post(this.baseUrl + \"api/\" + \"subUsers/\" + \"user/login\", userValue);\n  }\n\n  getOtpFromMoNumber(mobileNo: any){\n    return this.http.get(this.baseUrl + \"api/forms/getotp/\" + mobileNo, this.httpOptions)\n  }\n\n  verifyOtp(verify_otp: any){\n    return this.http.post(this.baseUrl + \"api/forms/verify_otp\", verify_otp,this.httpOptions);\n  }\n\n\n  updateImagesById(id: string, photofile: any){\n    return this.http.post(this.baseUrl + \"api/forms/imageupdate/\" + id, photofile,this.httpOptions);\n  }\n\n  getBwUsersById(id: string){\n    return this.http.get(this.baseUrl + \"api/forms/getprofile/\" + id,this.httpOptions);\n  }\n\n  getValuesFromPincode(pincode: any){\n    return this.http.get(this.baseUrl + \"api/allIndiaPostal/getAllIndiaPin/\" + pincode,this.httpOptions);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi1jcmVhdGUtdXNlci5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"tool\\\">\\n    <ion-title style=\\\"color: white;\\\">Add Users</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list >\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Name</ion-label>\\n              <ion-input\\n                name=\\\"userName\\\"\\n                required\\n                [ngModel]=\\\"userData.userName\\\"\\n                formControlName=\\\"userName\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Mobile Number</ion-label>\\n              <ion-input\\n                name=\\\"moNumber\\\"\\n                required\\n                [ngModel]=\\\"userData.moNumber\\\"\\n                formControlName=\\\"moNumber\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">email</ion-label>\\n              <ion-input\\n                name=\\\"email\\\"\\n                required\\n                [ngModel]=\\\"userData.email\\\"\\n                formControlName=\\\"email\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">password</ion-label>\\n              <ion-input\\n                name=\\\"password\\\"\\n                required\\n                [ngModel]=\\\"userData.password\\\"\\n                formControlName=\\\"password\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-margin-bottom\\\">\\n              <ion-label class=\\\"ion-margin-bottom\\\" position=\\\"stacked\\\">Job Type</ion-label>\\n              <select [ngModel]=\\\"userData.jobType\\\" (change)=\\\"getJobValue()\\\" formControlName=\\\"jobType\\\"  name=\\\"jobType\\\" class=\\\"required\\\">\\n                <option value=\\\"\\\" disabled selected>Select Location</option>\\n                <option *ngFor=\\\"let job of typeOfJob\\\"  [ngValue]=\\\"job\\\">{{job}}</option>\\n              </select>\\n            </ion-item>\\n\\n            <ion-item lines=\\\"none\\\">\\n              <!-- <ion-label>Job Status</ion-label> -->\\n              <ion-list>\\n                <ion-radio-group [ngModel]=\\\"userData.status\\\" value=\\\"Active\\\" formControlName=\\\"status\\\" (ionChange)=\\\"getRadioValue($event)\\\">\\n                  <ion-list-header>\\n                    <ion-label>Job Status</ion-label>\\n                  </ion-list-header>\\n              \\n                  <ion-item>\\n                    <ion-label>Active</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"Active\\\"></ion-radio>\\n                  </ion-item>\\n              \\n                  <ion-item>\\n                    <ion-label>InActive</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"inActive\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-radio-group>\\n              </ion-list>\\n            </ion-item>\\n\\n      \\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n         <ion-button  \\n         class=\\\"ion-margin-vertical\\\"\\n         type=\\\"submit\\\"\\n         color=\\\"danger\\\"\\n         expand=\\\"block\\\">ADD USER</ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n         <ion-button  \\n         class=\\\"ion-margin-vertical\\\"\\n         color=\\\"danger\\\"\\n         expand=\\\"block\\\" routerLink=\\\"/admin-user-reports\\\">Check user list</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";"]}