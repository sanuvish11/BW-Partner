{"version":3,"sources":["webpack:///src/app/notification/notification-routing.module.ts","webpack:///src/app/notification/notification.module.ts","webpack:///src/app/notification/notification.page.ts","webpack:///src/app/notification/notification.page.scss","webpack:///src/app/notification/notification.page.html"],"names":["routes","path","component","NotificationPage","NotificationPageRoutingModule","NgModule","imports","RouterModule","exports","NotificationPageModule","CommonModule","FormsModule","IonicModule","declarations","apiService","alertController","notiData","status","notiObj","Notification","getNotifications","getAllNotifications","subscribe","res","console","log","err","id","userAmount","create","cssClass","header","inputs","name","type","value","placeholder","buttons","text","role","handler","data","bidAmount","new_bid_amount","saveUserNotification","forEach","NAME","TOTAL_AMOUNT","toString","updateNotificationData","alert","present","_id","STATUS","ApiService","AlertController","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,gDAAAC;AAFb,OADqB,CAAvB;;UAWaC,8BAA6B;AAAA;AAAA,O;;AAA7BA,oCAA6B,uDAJzC,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAIyC,GAA7BH,8BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAK,uBAAsB;AAAA;AAAA,O;;AAAtBA,6BAAsB,uDATlC,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,0DAAAR,6BAJO,CADD;AAORS,oBAAY,EAAE,CAAC,gDAAAV,gBAAD;AAPN,OAAT,CASkC,GAAtBM,uBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCVAN,iBAAgB;AAQ3B,kCAAoBW,UAApB,EACSC,eADT,EAC2C;AAAA;;AADvB,eAAAD,UAAA,GAAAA,UAAA;AACX,eAAAC,eAAA,GAAAA,eAAA;AART,eAAAC,QAAA,GAAkB,EAAlB;AACA,eAAAC,MAAA,GAAiB,QAAjB;AAKA,eAAAC,OAAA,GAAwB,IAAI,kDAAAC,YAAJ,EAAxB;AAE8C;;AATnB;AAAA;AAAA,iBAW3B,oBAAW;AACT,iBAAKC,gBAAL;AACD;AAb0B;AAAA;AAAA,iBAe3B,4BAAgB;AAAA;;AACd,iBAAKN,UAAL,CAAgBO,mBAAhB,GAAsCC,SAAtC,CAAgD,UAACC,GAAD,EAAc;AAC5DC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAI,CAACP,QAAL,GAAgBO,GAAhB;AACD,aAHD,EAGG,UAAAG,GAAG,EAAI;AAACF,qBAAO,CAACC,GAAR,CAAYC,GAAZ;AAAiB,aAH5B;AAID;AApB0B;AAAA;AAAA,iBAsBrB,sBAAaC,EAAb,EAAiBC,UAAjB,EAA6B;;;;;;;;;;AACnB,6BAAM,KAAKb,eAAL,CAAqBc,MAArB,CAA4B;AAC9CC,gCAAQ,EAAE,iBADoC;AAE9CC,8BAAM,EAAE,sBAFsC;AAG9CC,8BAAM,EAAE,CACN;AACEC,8BAAI,EAAE,WADR;AAEEC,8BAAI,EAAE,MAFR;AAGEC,+BAAK,EAAEP,UAHT;AAIEQ,qCAAW,EAAE;AAJf,yBADM,EAON;AACEH,8BAAI,EAAE,gBADR;AAEEC,8BAAI,EAAE,MAFR;AAGEE,qCAAW,EAAE;AAHf,yBAPM,CAHsC;AAgB9CC,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,QADR;AAEEC,8BAAI,EAAE,QAFR;AAGET,kCAAQ,EAAE,WAHZ;AAIEU,iCAAO,EAAE,mBAAM;AACbhB,mCAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AANH,yBADO,EAQJ;AACDa,8BAAI,EAAE,IADL;AAEDE,iCAAO,EAAE,iBAACC,IAAD,EAAU;AACjBjB,mCAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,mCAAO,CAACC,GAAR,CAAYgB,IAAZ,EAFiB,CAGjB;;AAAA;AACA,kCAAI,CAACC,SAAL,GAAiBD,IAAI,CAACE,cAAtB;AACAnB,mCAAO,CAACC,GAAR,CAAYgB,IAAI,CAACE,cAAjB;AACAnB,mCAAO,CAACC,GAAR,CAAY,MAAI,CAACiB,SAAjB;AACAlB,mCAAO,CAACC,GAAR,CAAYG,UAAZ;;AAEA,kCAAI,CAACd,UAAL,CAAgB8B,oBAAhB,CAAqC;AAC/B,sCAAQ,OADuB;AAE9B,sCAAQ,KAFsB;AAG9B,sCAAQhB,UAHsB;AAI9B,8CAAgB,MAAI,CAACc,SAJS;AAK9B,+CAAiB,QALa;AAM9B,yCAAW,IANmB;AAO9B,wCAAU;AAPoB,6BAArC;;AASA,kCAAI,CAAC1B,QAAL,CAAc6B,OAAd,CAAsB,UAACtB,GAAD,EAAuB;AAC3CC,qCAAO,CAACC,GAAR,CAAYF,GAAZ;AACAA,iCAAG,CAACuB,IAAJ,GAAW,OAAX;AACAvB,iCAAG,CAACwB,YAAJ,GAAmB,MAAI,CAACL,SAAL,CAAeM,QAAf,EAAnB;AACAxB,qCAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,oCAAI,CAACT,UAAL,CAAgBmC,sBAAhB,CAAuCtB,EAAvC,EAA2CJ,GAA3C,EACCD,SADD,CACW,UAACC,GAAD,EAAuB;AAChCC,uCAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,oCAAGA,GAAH,EAAO;AACL,wCAAI,CAACH,gBAAL;AACD;AACF,+BAND,EAMI,UAAAM,GAAG,EAAI;AAAEF,uCAAO,CAACC,GAAR,CAAYC,GAAZ;AAAkB,+BAN/B;AAOD,6BAZD;AAaD;AAjCA,yBARI;AAhBqC,uBAA5B,CAAN;;;AAARwB,2B;;AA8DN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AAtF0B;AAAA;AAAA,iBAwF3B,qBAAYxB,EAAZ,EAAc;AAAA;;AACZH,mBAAO,CAACC,GAAR,CAAYE,EAAZ;AACA,iBAAKX,QAAL,CAAc6B,OAAd,CAAsB,UAACJ,IAAD,EAAe;AACnC,kBAAGA,IAAI,CAACW,GAAL,KAAazB,EAAhB,EAAmB;AACjBc,oBAAI,CAACY,MAAL,GAAc,CAAd;AACA,sBAAI,CAACnC,OAAL,GAAeuB,IAAf;AACA,sBAAI,CAACxB,MAAL,GAAc,UAAd;AACAO,uBAAO,CAACC,GAAR,CAAY,MAAI,CAACP,OAAjB;;AACA,sBAAI,CAACJ,UAAL,CAAgBmC,sBAAhB,CAAuCtB,EAAvC,EAA2C,MAAI,CAACT,OAAhD,EACOI,SADP,CACiB,UAACC,GAAD,EAAuB,CAAE,CAD1C,EAC6C,UAAAG,GAAG,EAAI;AAAEF,yBAAO,CAACC,GAAR,CAAYC,GAAZ;AAAkB,iBADxE;AAED;AACF,aATD;AAUD;AApG0B;AAAA;AAAA,iBAsG3B,qBAAYC,EAAZ,EAAsB;AACpBH,mBAAO,CAACC,GAAR,CAAYE,EAAZ;AACD;AAxG0B;AAAA;AAAA,iBA0G3B,qBAAYA,EAAZ,EAAc;AAAA;;AACZH,mBAAO,CAACC,GAAR,CAAYE,EAAZ;AACA,iBAAKX,QAAL,CAAc6B,OAAd,CAAsB,UAACJ,IAAD,EAAe;AACnC,kBAAGA,IAAI,CAACW,GAAL,KAAazB,EAAhB,EAAmB;AACjBc,oBAAI,CAACY,MAAL,GAAc,CAAd;AACA,sBAAI,CAACnC,OAAL,GAAeuB,IAAf;AACA,sBAAI,CAACxB,MAAL,GAAc,UAAd;AACAO,uBAAO,CAACC,GAAR,CAAY,MAAI,CAACP,OAAjB;;AACA,sBAAI,CAACJ,UAAL,CAAgBmC,sBAAhB,CAAuCtB,EAAvC,EAA2C,MAAI,CAACT,OAAhD,EACOI,SADP,CACiB,UAACC,GAAD,EAAuB,CAAE,CAD1C,EAC6C,UAAAG,GAAG,EAAI;AAAEF,yBAAO,CAACC,GAAR,CAAYC,GAAZ;AAAkB,iBADxE;AAED;AACF,aATD,EAFY,CAYZ;AACD;AAvH0B;;AAAA;AAAA,S;;;;gBARpB,mDAAA4B;;gBAEA,4CAAAC;;;;AAMIpD,uBAAgB,uDAL5B,+CAAAqD,SAAA,EAAU;AACTC,gBAAQ,EAAE,kBADD;AAETC,gBAAQ,EAAR,0EAFS;;AAAA,OAAV,CAK4B,GAAhBvD,iBAAgB,CAAhB;;;;;;;;;;;;;;;ACTb;;;AAAA,uCAAe,yKAAf;;;;;;;;;;;;;;;ACAA;;;AAAA,uCAAe,s1EAAf","file":"src_app_notification_notification_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationPage } from './notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationPageRoutingModule } from './notification-routing.module';\n\nimport { NotificationPage } from './notification.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationPageRoutingModule\n  ],\n  declarations: [NotificationPage]\n})\nexport class NotificationPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Notification } from '../Models/Notification';\nimport { AlertController } from '@ionic/angular';\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.page.html',\n  styleUrls: ['./notification.page.scss'],\n})\nexport class NotificationPage implements OnInit {\n  notiData: any[] = [];\n  status: string = \"Active\";\n  // status = 1/ Active\n  // status = 2/ Approved\n  // status = 3/ reject\n  bidAmount: number;\n  notiObj: Notification = new Notification();\n  constructor(private apiService: ApiService, \n    public alertController: AlertController) { }\n\n  ngOnInit() {\n    this.getNotifications();\n  }\n\n  getNotifications(){\n    this.apiService.getAllNotifications().subscribe((res: any) => {\n      console.log(res);\n      this.notiData = res;\n    },(err => {console.log(err)}));\n  }\n\n  async presentAlert(id, userAmount) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Increase Bid amount!',\n      inputs: [\n        {\n          name: 'Old Value',\n          type: 'text',\n          value: userAmount,\n          placeholder: 'Placeholder 1'\n        },\n        {\n          name: 'new_bid_amount',\n          type: 'text',\n          placeholder: 'Placeholder 2'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('Confirm Ok');\n            console.log(data);\n            // this.bidAmount = parseInt(userAmount) + parseInt(data.new_bid_amount);\n            this.bidAmount = data.new_bid_amount;\n            console.log(data.new_bid_amount);\n            console.log(this.bidAmount);\n            console.log(userAmount);\n\n            this.apiService.saveUserNotification({\n                  \"NAME\": \"hello\",\n                   \"NEED\": \"plu\",\n                   \"COST\": userAmount,\n                   \"TOTAL_AMOUNT\": this.bidAmount,\n                   \"MOBILE_NUMBER\": 12345678,\n                   \"ADDRESS\": \"TT\",\n                   \"STATUS\": 1\n           });\n            this.notiData.forEach((res: Notification) => {\n              console.log(res);\n              res.NAME = \"Ahmad\"\n              res.TOTAL_AMOUNT = this.bidAmount.toString();\n              console.log(res);\n              this.apiService.updateNotificationData(id, res)\n              .subscribe((res: Notification) => {\n                console.log(res)\n                if(res){\n                  this.getNotifications();\n                }\n              } ,(err => { console.log(err) }));\n            })\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  clickAccpet(id){\n    console.log(id);\n    this.notiData.forEach((data: any) => {\n      if(data._id === id){\n        data.STATUS = 2\n        this.notiObj = data;\n        this.status = \"Approved\";\n        console.log(this.notiObj)\n        this.apiService.updateNotificationData(id, this.notiObj)\n              .subscribe((res: Notification) => {} ,(err => { console.log(err) }));\n      }\n    }); \n  }\n\n  increaseBid(id: string){\n    console.log(id);\n  }\n\n  clickReject(id){\n    console.log(id);\n    this.notiData.forEach((data: any) => {\n      if(data._id === id){\n        data.STATUS = 3\n        this.notiObj = data;\n        this.status = \"Rejected\";\n        console.log(this.notiObj)\n        this.apiService.updateNotificationData(id, this.notiObj)\n              .subscribe((res: Notification) => {} ,(err => { console.log(err) }));\n      }\n    })\n    // this.apiService.updateNotificationData(id, {STATUS: 3});\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJub3RpZmljYXRpb24ucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>notification</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- <ion-grid>\\n    <ion-row> \\n      <ion-col size=\\\"3\\\">Name</ion-col>\\n      <ion-col>Need</ion-col>\\n      <ion-col>Cost</ion-col>\\n      <ion-col>Address</ion-col>\\n      <ion-col>Status</ion-col>\\n      <ion-col>action</ion-col>\\n    </ion-row>\\n    <ion-row > \\n      <ion-col>S.No</ion-col>\\n      <ion-col>Name</ion-col>\\n      <ion-col>Gender</ion-col>\\n      <ion-col>Country</ion-col>\\n      <ion-col>Gender</ion-col>\\n      <ion-col>Country</ion-col>\\n    </ion-row>\\n  </ion-grid> -->\\n\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let n of notiData\\\"> \\n      <ion-col>\\n        <ion-label>\\n          Name\\n        </ion-label>\\n        <div  >\\n        {{n.NAME}}\\n        </div>\\n      </ion-col>\\n      <ion-col>\\n        <ion-label>\\n          Need\\n        </ion-label>\\n        <div>\\n          {{n.NEED}}\\n        </div>\\n      </ion-col>\\n      <ion-col>\\n        <ion-label>\\n          Cost\\n        </ion-label>\\n         <div>\\n          {{n.COST}}\\n        </div>\\n      </ion-col>\\n      <!-- <ion-col>\\n        <ion-label>\\n          Address\\n        </ion-label>\\n         <div >\\n            isjoasd\\n        </div>\\n      </ion-col> -->\\n     \\n      <ion-col>\\n        <ion-label>\\n          Status\\n        </ion-label>\\n         <div *ngIf=\\\"n.STATUS === 1\\\">\\n            Active\\n        </div>\\n        <div *ngIf=\\\"n.STATUS === 2\\\">\\n          Approved\\n      </div>\\n      <div *ngIf=\\\"n.STATUS === 3\\\">\\n        Rejected\\n    </div>\\n    \\n      </ion-col>\\n      <ion-col>\\n        <ion-label>\\n          Action\\n        </ion-label>\\n         <div *ngIf=\\\"n.STATUS === 1\\\">\\n          <ion-button (click)=\\\"clickAccpet(n._id)\\\">Accept</ion-button>\\n          <ion-button (click)=\\\"clickReject(n._id)\\\">Reject</ion-button>\\n          <ion-button (click)=\\\"presentAlert(n._id, n.COST)\\\">Increase Bid Amount</ion-button>\\n        </div>\\n        \\n        <div *ngIf=\\\"n.STATUS === 3\\\">\\n          <ion-label>Rejected</ion-label>\\n        </div>\\n      </ion-col>\\n      <div>\\n        <ion-row>Your Bid Amount: {{n.TOTAL_AMOUNT}}</ion-row>\\n      </div>\\n    </ion-row>\\n   \\n  </ion-grid>\\n\\n\\n    \\n    \\n</ion-content>\\n\";"]}