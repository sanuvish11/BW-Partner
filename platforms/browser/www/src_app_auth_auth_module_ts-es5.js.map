{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.page.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/auth/auth.page.scss","webpack:///src/app/auth/auth.page.html"],"names":["routes","path","component","AuthPage","AuthPageRoutingModule","NgModule","imports","RouterModule","exports","AuthPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","authService","isLoading","isLogin","submitted","form","FormGroup","email","FormControl","Validators","password","controls","get","value","invalid","console","log","login","createUser","ApiService","Component","selector","template","http","router","isAuthenticated","authStatusListener","Subject","otp","BehaviorSubject","senderid","apikey","_OTP","Math","floor","random","message","httpOptions","headers","HttpHeaders","baseUrl","authData","post","subscribe","response","err","token","expiresInDuration","expiresIn","setAuthTimer","next","now","Date","expirationDate","getTime","saveAuthData","navigate","localStorage","setItem","toISOString","clearTimeout","tokenTimer","clearAuthData","removeItem","duration","setTimeout","logout","number","userData","res","id","put","skills","coreSkills","expeData","userValue","mobileNo","verify_otp","photofile","pincode","HttpClient","Router","Injectable","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,wCAAAC;AAFb,OADqB,CAAvB;;UAWaC,sBAAqB;AAAA;AAAA,O;;AAArBA,4BAAqB,uDAJjC,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAIiC,GAArBH,sBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAK,eAAc;AAAA;AAAA,O;;AAAdA,qBAAc,uDAV1B,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,4CAAAC,mBAJO,EAKP,kDAAAT,qBALO,CADD;AAQRU,oBAAY,EAAE,CAAC,wCAAAX,QAAD;AARN,OAAT,CAU0B,GAAdM,eAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCXAN,SAAQ;AASnB,0BAAoBY,WAApB,EAA6C;AAAA;;AAAzB,eAAAA,WAAA,GAAAA,WAAA;AARpB,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,OAAA,GAAU,IAAV;AACA,eAAAC,SAAA,GAAqB,KAArB;AAEA,eAAAC,IAAA,GAAO,IAAI,4CAAAC,SAAJ,CAAc;AACnBC,iBAAK,EAAE,IAAI,4CAAAC,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,4CAAAC,UAAA,SAAD,EAAsB,4CAAAA,UAAA,WAAqB,EAArB,CAAtB,EAAgD,4CAAAA,UAAA,WAAqB,EAArB,CAAhD,EAA2E,4CAAAA,UAAA,SAAmB,UAAnB,CAA3E,CAApB,CADY;AAEnBC,oBAAQ,EAAE,IAAI,4CAAAF,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,4CAAAC,UAAA,SAAD,CAApB;AAFS,WAAd,CAAP;AAIgD;;AAT7B;AAAA;AAAA,iBAWnB,oBAAW,CACV;AAZkB;AAAA;AAAA,iBAclB,4BAAmB;AAClB,iBAAKN,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;AAhBkB;AAAA;AAAA,iBAkBnB,WAAEQ,QAAF,EAAY;AACV,mBAAO,KAAKN,IAAL,CAAUO,GAAV,CAAcD,QAAd,CAAP;AACD;AApBkB;AAAA;AAAA,iBAqBjB,oBAAQ;AACR,iBAAKP,SAAL,GAAiB,IAAjB;AACA,gBAAMG,KAAK,GAAG,KAAKF,IAAL,CAAUO,GAAV,CAAc,OAAd,EAAuBC,KAArC;AACA,gBAAMH,QAAQ,GAAG,KAAKL,IAAL,CAAUO,GAAV,CAAc,UAAd,EAA0BC,KAA3C;;AAEA,gBAAG,KAAKR,IAAL,CAAUS,OAAb,EAAqB;AACnB;AACF;;AACAC,mBAAO,CAACC,GAAR,CAAYT,KAAZ;AACAQ,mBAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,gBAAG,KAAKP,OAAR,EAAgB;AACd,mBAAKF,WAAL,CAAiBgB,KAAjB,CAAuBV,KAAvB,EAA8BG,QAA9B;AACD,aAFD,MAEK;AACH,mBAAKT,WAAL,CAAiBiB,UAAjB,CAA4BX,KAA5B,EAAmCG,QAAnC;AACD;AAEA;AArCgB;;AAAA;AAAA,S;;;;gBATZ,mDAAAS;;;;AASI9B,eAAQ,uDALpB,+CAAA+B,SAAA,EAAU;AACTC,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR,kEAFS;;AAAA,OAAV,CAKoB,GAARjC,SAAQ,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCA8B,WAAU;AAiBrB,4BAAoBI,IAApB,EAA8CC,MAA9C,EAA8D;AAAA;;AAA1C,eAAAD,IAAA,GAAAA,IAAA;AAA0B,eAAAC,MAAA,GAAAA,MAAA;AAhBtC,eAAAC,eAAA,GAAkB,KAAlB;AAGA,eAAAC,kBAAA,GAAqB,IAAI,kCAAAC,OAAJ,EAArB;AACN,eAAAC,GAAA,GAAM,IAAI,kCAAAC,eAAJ,CAA4B,CAA5B,CAAN;AACF,eAAAC,QAAA,GAAW,QAAX;AACA,eAAAC,MAAA,GAAS,kBAAT;AACA,eAAAC,IAAA,GAAOC,IAAI,CAACC,KAAL,CAAW,OAAOD,IAAI,CAACE,MAAL,KAAgB,IAAlC,CAAP;AACA,eAAAC,OAAA,GAAU,2BAA2B,KAAKJ,IAAhC,GAAwC,8CAAlD;AACA,eAAAK,WAAA,GAAc;AACZC,mBAAO,EAAE,IAAI,kDAAAC,WAAJ,CAAgB;AACvB,8BAAgB;AADO,aAAhB;AADG,WAAd,CAO8D,CAF9D;;AACA,eAAAC,OAAA,GAAS,0CAAT;AACiE;;AAjB5C;AAAA;AAAA,iBAmBvB,oBAAWjC,KAAX,EAA0BG,QAA1B,EAA4C;AACxC,gBAAM+B,QAAQ,GAAQ;AAAElC,mBAAK,EAAEA,KAAT;AAAgBG,sBAAQ,EAAEA;AAA1B,aAAtB;AACA,iBAAKa,IAAL,CACGmB,IADH,CACQ,uCADR,EACiDD,QADjD,EAC0D,KAAKJ,WAD/D,EAEGM,SAFH,CAEa,UAAAC,QAAQ,EAAI;AACrB7B,qBAAO,CAACC,GAAR,CAAY4B,QAAZ;AACD,aAJH,EAKE,UAACC,GAAD,EAAc;AACZ9B,qBAAO,CAACC,GAAR,CAAY6B,GAAZ;AACD,aAPH;AAQD;AA7BoB;AAAA;AAAA,iBA+BrB,eAAMtC,KAAN,EAAqBG,QAArB,EAAuC;AAAA;;AACrC,gBAAM+B,QAAQ,GAAQ;AAAElC,mBAAK,EAAEA,KAAT;AAAgBG,sBAAQ,EAAEA;AAA1B,aAAtB;AACA,iBAAKa,IAAL,CACGmB,IADH,CAEI,sCAFJ,EAGID,QAHJ,EAKGE,SALH,CAKa,UAAAC,QAAQ,EAAI;AACrB7B,qBAAO,CAACC,GAAR,CAAY4B,QAAZ;AACA,kBAAME,KAAK,GAAGF,QAAQ,CAACE,KAAvB;AACA,mBAAI,CAACA,KAAL,GAAaA,KAAb;;AACA,kBAAIA,KAAJ,EAAW;AACT,oBAAMC,iBAAiB,GAAGH,QAAQ,CAACI,SAAnC;;AACA,qBAAI,CAACC,YAAL,CAAkBF,iBAAlB;;AACA,qBAAI,CAACtB,eAAL,GAAuB,IAAvB;;AACA,qBAAI,CAACC,kBAAL,CAAwBwB,IAAxB,CAA6B,IAA7B;;AACA,oBAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,oBAAMC,cAAc,GAAG,IAAID,IAAJ,CAASD,GAAG,CAACG,OAAJ,KAAgBP,iBAAiB,GAAG,IAA7C,CAAvB;AACAhC,uBAAO,CAACC,GAAR,CAAYqC,cAAZ;;AACA,qBAAI,CAACE,YAAL,CAAkBT,KAAlB,EAAyBO,cAAzB;;AACA,qBAAI,CAAC7B,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,aApBH,EAqBG,UAACX,GAAD,EAAc;AACb9B,qBAAO,CAACC,GAAR,CAAY6B,GAAZ;AACD,aAvBH;AAwBD;AAzDoB;AAAA;AAAA,iBA2Db,sBAAaC,KAAb,EAA4BO,cAA5B,EAAkD;AACxDI,wBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BZ,KAA9B;AACAW,wBAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCL,cAAc,CAACM,WAAf,EAAnC;AACD;AA9DoB;AAAA;AAAA,iBAgErB,kBAAS;AACP,iBAAKb,KAAL,GAAa,IAAb;AACA,iBAAKrB,eAAL,GAAuB,KAAvB;AACA,iBAAKC,kBAAL,CAAwBwB,IAAxB,CAA6B,KAA7B;AACAU,wBAAY,CAAC,KAAKC,UAAN,CAAZ;AACA,iBAAKC,aAAL;AACA,iBAAKtC,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AAvEoB;AAAA;AAAA,iBAyEb,yBAAgB;AACtBC,wBAAY,CAACM,UAAb,CAAwB,OAAxB;AACAN,wBAAY,CAACM,UAAb,CAAwB,YAAxB;AACD;AA5EoB;AAAA;AAAA,iBA+Eb,sBAAaC,QAAb,EAA+B;AAAA;;AACrCjD,mBAAO,CAACC,GAAR,CAAY,oBAAoBgD,QAAhC;AACA,iBAAKH,UAAL,GAAkBI,UAAU,CAAC,YAAM;AACjC,oBAAI,CAACC,MAAL;AACD,aAF2B,EAEzBF,QAAQ,GAAG,IAFc,CAA5B;AAGD,WApFoB,CAsFrB;;AAtFqB;AAAA;AAAA,iBAuFrB,gBAAOG,MAAP,EAAa;AACX,gBAAInC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,OAAOD,IAAI,CAACE,MAAL,KAAgB,IAAlC,CAAX;;AACA,gBAAIC,OAAO,GAAG,2BAA2BJ,IAA3B,GAAmC,+CAAjD;AACEjB,mBAAO,CAACC,GAAR,CAAYoB,OAAZ;AACA,iBAAKR,GAAL,CAASsB,IAAT,CAAclB,IAAd;AACA,iBAAKR,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,MAAD,CAArB,EALS,CAOX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA1GoB;AAAA;AAAA,iBA4GrB,sBAAaY,QAAb,EAAqB;AAAA;;AACnB,iBAAK7C,IAAL,CAAUmB,IAAV,CAAe,KAAKF,OAAL,GAAe,KAAf,GAAuB,GAAvB,GAA6B,UAA7B,GAA0C,GAA1C,GAAgD,MAA/D,EAAuE4B,QAAvE,EAAiFzB,SAAjF,CAA2F,UAAC0B,GAAD,EAAc;AACvGtD,qBAAO,CAACC,GAAR,CAAYqD,GAAZ;;AACA,kBAAGA,GAAH,EAAO;AACL,sBAAI,CAAC7C,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;AACF,aALD,EAMC,UAAAX,GAAG,EAAI;AACN9B,qBAAO,CAACC,GAAR,CAAY6B,GAAZ;AACD,aARD;AASD;AAtHoB;AAAA;AAAA,iBAwHrB,0BAAc;AACb,mBAAO,KAAKtB,IAAL,CAAUX,GAAV,CAAc,KAAK4B,OAAL,GAAe,KAAf,GAAuB,GAAvB,GAA6B,UAA7B,GAA0C,GAA1C,GAAgD,KAAhD,GAAwD,GAAxD,GAA8D,KAA5E,EAAkF,KAAKH,WAAvF,CAAP;AACA;AA1HoB;AAAA;AAAA,iBA4HrB,wBAAeiC,EAAf,EAAiB;AACf,mBAAO,KAAK/C,IAAL,CAAUX,GAAV,CAAc,KAAK4B,OAAL,GAAe,KAAf,GAAuB,GAAvB,GAA6B,UAA7B,GAA0C,GAA1C,GAAgD8B,EAA9D,EAAiE,KAAKjC,WAAtE,CAAP;AACD;AA9HoB;AAAA;AAAA,iBAgIrB,wBAAeiC,EAAf,EAAmBF,QAAnB,EAAqC;AAAA;;AACnC,iBAAK7C,IAAL,CAAUgD,GAAV,CAAc,KAAK/B,OAAL,GAAe,KAAf,GAAuB,GAAvB,GAA6B,UAA7B,GAA0C,GAA1C,GAAgD,QAAhD,GAA2D,GAA3D,GAAiE8B,EAA/E,EAAmFF,QAAnF,EAA4F,KAAK/B,WAAjG,EACGM,SADH,CACa,UAAC0B,GAAD,EAAmB;AAC5BtD,qBAAO,CAACC,GAAR,CAAYqD,GAAZ;;AACA,kBAAGA,GAAH,EAAO;AACL,sBAAI,CAAC7C,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;AACF,aANH,EAOG,UAAAX,GAAG;AAAA,qBAAI9B,OAAO,CAACC,GAAR,CAAY6B,GAAZ,CAAJ;AAAA,aAPN;AAQD;AAzIoB;AAAA;AAAA,iBA2IrB,oBAAW2B,MAAX,EAAiB;AACf,mBAAO,KAAKjD,IAAL,CAAUmB,IAAV,CAAe,KAAKF,OAAL,GAAe,MAAf,GAAwB,OAAxB,GAAmC,OAAnC,GAA6C,OAA5D,EAAqEgC,MAArE,EAA4E,KAAKnC,WAAjF,CAAP;AACD;AA7IoB;AAAA;AAAA,iBA+IrB,wBAAeoC,UAAf,EAAyB;AACvB,mBAAO,KAAKlD,IAAL,CAAUmB,IAAV,CAAe,KAAKF,OAAL,GAAe,MAAf,GAAwB,eAAxB,GAA2C,OAA3C,GAAqD,YAApE,EAAkFiC,UAAlF,EAA6F,KAAKpC,WAAlG,CAAP;AACD;AAjJoB;AAAA;AAAA,iBAmJrB,kBAASqC,QAAT,EAAiB;AACf,mBAAO,KAAKnD,IAAL,CAAUmB,IAAV,CAAe,KAAKF,OAAL,GAAe,MAAf,GAAwB,SAAxB,GAAqC,OAArC,GAA+C,MAA9D,EAAsEkC,QAAtE,EAA+E,KAAKrC,WAApF,CAAP;AACD;AArJoB;AAAA;AAAA,iBAuJrB,sBAAasC,SAAb,EAAsB;AACpB,mBAAO,KAAKpD,IAAL,CAAUmB,IAAV,CAAe,KAAKF,OAAL,GAAe,MAAf,GAAwB,WAAxB,GAAsC,YAArD,EAAmEmC,SAAnE,CAAP;AACD;AAzJoB;AAAA;AAAA,iBA2JrB,4BAAmBC,QAAnB,EAAgC;AAC9B,mBAAO,KAAKrD,IAAL,CAAUX,GAAV,CAAc,KAAK4B,OAAL,GAAe,mBAAf,GAAqCoC,QAAnD,EAA6D,KAAKvC,WAAlE,CAAP;AACD;AA7JoB;AAAA;AAAA,iBA+JrB,mBAAUwC,UAAV,EAAyB;AACvB,mBAAO,KAAKtD,IAAL,CAAUmB,IAAV,CAAe,KAAKF,OAAL,GAAe,sBAA9B,EAAsDqC,UAAtD,EAAiE,KAAKxC,WAAtE,CAAP;AACD;AAjKoB;AAAA;AAAA,iBAoKrB,0BAAiBiC,EAAjB,EAA6BQ,SAA7B,EAA2C;AACzC,mBAAO,KAAKvD,IAAL,CAAUmB,IAAV,CAAe,KAAKF,OAAL,GAAe,wBAAf,GAA0C8B,EAAzD,EAA6DQ,SAA7D,EAAuE,KAAKzC,WAA5E,CAAP;AACD;AAtKoB;AAAA;AAAA,iBAwKrB,wBAAeiC,EAAf,EAAyB;AACvB,mBAAO,KAAK/C,IAAL,CAAUX,GAAV,CAAc,KAAK4B,OAAL,GAAe,uBAAf,GAAyC8B,EAAvD,EAA0D,KAAKjC,WAA/D,CAAP;AACD;AA1KoB;AAAA;AAAA,iBA4KrB,8BAAqB0C,OAArB,EAAiC;AAC/B,mBAAO,KAAKxD,IAAL,CAAUX,GAAV,CAAc,KAAK4B,OAAL,GAAe,oCAAf,GAAsDuC,OAApE,EAA4E,KAAK1C,WAAjF,CAAP;AACD;AA9KoB;;AAAA;AAAA,S;;;;gBATd,kDAAA2C;;gBAEA,6CAAAC;;;;AAOI9D,iBAAU,uDAHtB,+CAAA+D,UAAA,EAAW;AACVC,kBAAU,EAAE;AADF,OAAX,CAGsB,GAAVhE,WAAU,CAAV;;;;;;;;;;;;;;;ACVb;;;AAAA,uCAAe,iUAAf;;;;;;;;;;;;;;;ACAA;;;AAAA,uCAAe,6kGAAf","file":"src_app_auth_auth_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPageRoutingModule } from './auth-routing.module';\n\nimport { AuthPage } from './auth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AuthPageRoutingModule\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","import { ApiService } from './../services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n  isLoading = false;\n  isLogin = true;\n  submitted: boolean = false;\n\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10),  Validators.pattern(\"^[0-9]*$\")]),\n    password: new FormControl('', [Validators.required]),\n  })\n  constructor(private authService: ApiService) { }\n\n  ngOnInit() {\n  }\n\n   onSwitchAuthMode() {\n    this.isLogin = !this.isLogin;\n  }\n  \n  f(controls) {\n    return this.form.get(controls);\n  }\n    onSubmit(){\n    this.submitted = true;\n    const email = this.form.get('email').value;\n    const password = this.form.get('password').value;\n\n    if(this.form.invalid){\n      return;\n   }\n    console.log(email);\n    console.log(password);\n    if(this.isLogin){\n      this.authService.login(email, password);\n    }else{\n      this.authService.createUser(email, password);\n    }\n  \n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { SubUsers } from './../Models/subUsers';\nimport { BwUsers } from '../Models/bwUsers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private authStatusListener = new Subject<boolean>();\n    otp = new BehaviorSubject<number>(0);\n  senderid = 'BHWORK';\n  apikey = '2FOIKXErhyfpHlYT';\n  _OTP = Math.floor(1000 + Math.random() * 9000);\n  message = \"Dear Partner, use OTP \" + this._OTP +  \"to verify your mobile number - Bharat Worker\"\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n  // baseUrl= 'http://localhost:3000/';\n  baseUrl= 'https://bw-partner-server.herokuapp.com/';\n  constructor(private http: HttpClient, private router: Router) { }\n\ncreateUser(email: string, password: string) {\n    const authData: any = { email: email, password: password };\n    this.http\n      .post(\"http://localhost:3000/api/user/signup\", authData,this.httpOptions)\n      .subscribe(response => {\n        console.log(response);\n      },\n      (err: any) => {\n        console.log(err);\n      });\n  }\n\n  login(email: string, password: string) {\n    const authData: any = { email: email, password: password };\n    this.http\n      .post<{ token: string; expiresIn: number }>(\n        \"http://localhost:3000/api/user/login\",\n        authData\n      )\n      .subscribe(response => {\n        console.log(response);\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          console.log(expirationDate);\n          this.saveAuthData(token, expirationDate);\n          this.router.navigate([\"/admin-home\"]);\n        }\n      }\n      ,(err: any) => {\n        console.log(err);\n      });\n  }\n\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/auth']);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n  }\n\n\n  private setAuthTimer(duration: number) {\n    console.log(\"Setting timer: \" + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  // http://text.radicaltechsupport.com/V2/http-api.php?senderidsenderid=XXXXXXXXXXXXXXXX&senderid=XXXXXX&number=XXXXXXXXXXX,XXXXXXXXXXX,XXXXXXXXXXX&message=hello there&format=json\n  getOtp(number){\n    let _OTP = Math.floor(1000 + Math.random() * 9000);\n    let message = \"Dear Partner, use OTP \" + _OTP +  \" to verify your mobile number - Bharat Worker\";\n      console.log(message)\n      this.otp.next(_OTP);\n      this.router.navigate(['/otp']);\n   \n    // const params = new HttpParams()\n    // .set('apikey', this.apikey)\n    // .set('senderid', this.senderid)\n    // .set('number', number)\n    // .set('message', message)\n    // .set('format', \"json\");\n    // console.log(params.toString());\n    // this.http.get(\"http://text.radicaltechsupport.com/V2/http-api.php\", {params}).subscribe((data: any) => {\n    //   console.log(data);\n    // },(err => {\n    //   console.log(err);\n    // }))\n  }\n\n  saveSubUsers(userData){\n    this.http.post(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + \"save\", userData).subscribe((res: any) => {\n      console.log(res);\n      if(res){\n        this.router.navigate(['/admin-user-reports'])\n      }\n    },\n    (err => {\n      console.log(err);\n    }))\n  }\n\n  getAllSubUsers(){\n   return this.http.get(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + \"get\" + \"/\" + \"all\",this.httpOptions);\n  }\n\n  getSubUserById(id){\n    return this.http.get(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + id,this.httpOptions);\n  }\n\n  updateSubUsers(id, userData: SubUsers){\n    this.http.put(this.baseUrl + \"api\" + \"/\" + \"subUsers\" + \"/\" + \"update\" + \"/\" + id, userData,this.httpOptions)\n      .subscribe((res: SubUsers) => {\n        console.log(res);\n        if(res){\n          this.router.navigate(['/admin-user-reports'])\n        }\n      },\n      (err => console.log(err)))\n  }\n  \n  saveSkills(skills){\n    return this.http.post(this.baseUrl + \"api/\" + \"jobs/\" +  \"save/\" + \"skill\", skills,this.httpOptions);\n  }\n\n  saveCoreSkills(coreSkills){\n    return this.http.post(this.baseUrl + \"api/\" + \"jobsWorkArea/\" +  \"save/\" + \"coreSkills\", coreSkills,this.httpOptions);\n  }\n\n  saveExpe(expeData){\n    return this.http.post(this.baseUrl + \"api/\" + \"skills/\" +  \"save/\" + \"expe\", expeData,this.httpOptions);\n  }\n\n  subUserLogin(userValue){\n    return this.http.post(this.baseUrl + \"api/\" + \"subUsers/\" + \"user/login\", userValue);\n  }\n\n  getOtpFromMoNumber(mobileNo: any){\n    return this.http.get(this.baseUrl + \"api/forms/getotp/\" + mobileNo, this.httpOptions)\n  }\n\n  verifyOtp(verify_otp: any){\n    return this.http.post(this.baseUrl + \"api/forms/verify_otp\", verify_otp,this.httpOptions);\n  }\n\n\n  updateImagesById(id: string, photofile: any){\n    return this.http.post(this.baseUrl + \"api/forms/imageupdate/\" + id, photofile,this.httpOptions);\n  }\n\n  getBwUsersById(id: string){\n    return this.http.get(this.baseUrl + \"api/forms/getprofile/\" + id,this.httpOptions);\n  }\n\n  getValuesFromPincode(pincode: any){\n    return this.http.get(this.baseUrl + \"api/allIndiaPostal/getAllIndiaPin/\" + pincode,this.httpOptions);\n  }\n\n}\n","export default \".tool {\\n  --background: #eb445a;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7QUFDSiIsImZpbGUiOiJhdXRoLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b29se1xuICAgIC0tYmFja2dyb3VuZDogI2ViNDQ1YTtcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"tool\\\">\\n    <ion-title style=\\\"color: white;\\\" routerLink=\\\"/start\\\" >Back</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  \\n  \\n  <form [formGroup]=\\\"form\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-item lines='none'>\\n          <ion-label style=\\\"font-size: larger;\\\">\\n            {{ isLogin ? 'Login' : 'Signup' }}\\n          </ion-label>\\n        </ion-item>\\n      </ion-row>\\n      \\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Mobile Number</ion-label>\\n              <ion-input\\n                name=\\\"email\\\"\\n                required\\n                formControlName=\\\"email\\\"\\n                maxlength=\\\"10\\\" \\n                minlength=\\\"10\\\"\\n                type=\\\"tel\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-item *ngIf=\\\"submitted && f('email').hasError('required')\\\"\\n            lines=\\\"none\\\">\\n            <ion-label *ngIf=\\\"f('email').hasError('required')\\\"  style=\\\"color: red;\\\">\\n              Can't be empty!\\n            </ion-label>\\n          </ion-item>\\n\\n        <ion-item *ngIf=\\\"submitted && f('email').hasError('minlength')\\\"  \\n          lines=\\\"none\\\">\\n          <ion-label  *ngIf=\\\"form.get('email').errors.minlength\\\"  style=\\\"color: red;\\\">\\n            Must be 10 characters long!\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"f('email').hasError('pattern')\\\" \\n          lines=\\\"none\\\">\\n          <ion-label   style=\\\"color: red;\\\">\\n            Input must be a number!\\n          </ion-label>\\n        </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                formControlName=\\\"password\\\"\\n                name=\\\"password\\\"\\n                required\\n              ></ion-input>\\n            </ion-item>\\n         \\n            <ion-item *ngIf=\\\"submitted && f('password').hasError('required')\\\"\\n            lines=\\\"none\\\">\\n            <ion-label *ngIf=\\\"f('password').hasError('required')\\\"  style=\\\"color: red;\\\">\\n              Can't be empty!\\n            </ion-label>\\n          </ion-item>\\n\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button\\n            color=\\\"danger\\\"\\n            fill=\\\"clear\\\"\\n            expand=\\\"block\\\"\\n            (click)=\\\"onSwitchAuthMode()\\\"\\n          >\\n            Switch to {{ isLogin ? 'Signup' : 'Login' }}\\n          </ion-button>\\n          <ion-button\\n            type=\\\"submit\\\"\\n            color=\\\"danger\\\"\\n            expand=\\\"block\\\"\\n          >\\n            {{ isLogin ? 'Login' : 'Signup' }}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n\\n  <!-- <div class=\\\"ion-text-center\\\">\\n    <ion-spinner color=\\\"primary\\\" *ngIf=\\\"isLoading\\\"></ion-spinner>\\n  </div> -->\\n</ion-content>\\n\";"]}